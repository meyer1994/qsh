[tool.poetry]
name = "qsh"
version = "0.1.0"
description = ""
authors = ["Joao Meyer <1994meyer@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.109.0"
mangum = "^0.17.0"
openai = "^1.12.0"
jinja2 = "^3.1.3"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
aws-cdk-lib = "^2.0.0"
constructs = "^10.0.0"
ruff = "^0.3.0"
mypy = "^1.8.0"
aws-sam-cli = "^1.128.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "RUF", # ruff-specific rules
    "W",   # pycodestyle warnings
    "TCH"  # type-checking
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true
plugins = [
    "pydantic.mypy"
]

[[tool.mypy.overrides]]
module = ["openai.*"]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
